"""add table users

Revision ID: b722671d8a28
Revises: 
Create Date: 2024-08-01 14:18:25.329569

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b722671d8a28'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('users', 'avatar',
               existing_type=sa.VARCHAR(length=250),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'avatar',
               existing_type=sa.VARCHAR(length=250),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=150),
               existing_nullable=False)
    # ### end Alembic commands ###
